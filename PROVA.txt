-- PROVA DE BANCO --
-- ALUNO:IVAN HARTWIG BISSOTO

-- EXERCICIO  1 - A

CREATE OR REPLACE FUNCTION EXE_1A() RETURNS TRIGGER AS $$

BEGIN
    NEW.DATA_CADASTRO := EXTRACT ('DATE' FROM AGE(CURRENT_DATE)); 

RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_CLIENTE AFTER INSERT OR UPDATE ON CLIENTE
FOR EACH ROW EXECUTE PROCEDURE EXE_1A();
INSERT INTO  CLIENTE(DATA_CADASTRO, CPF_CNPJ, NOME, NASCIMENTO, PESSOA) VALUES (12/01/2017,'165.646.546-54','JOSE ',01/05/1967, 'PF');


-- EXERCICIO 1 - B
CREATE OR REPLACE FUNCTION EXE_1B() RETURNS TRIGGER AS $$

BEGIN
    UPDATE CLIENTE SET PESSOA
        IF (NEW.CPF_CNPJ < 18) THEN
        RETURN 'PF';
        ELSIF (NEW.CPF_CNPJ > 18) THEN
        RETURN 'PJ';
        END IF; 

RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_CLIENTE AFTER INSERT OR UPDATE ON CLIENTE
FOR EACH ROW EXECUTE PROCEDURE EXE_1B();
INSERT INTO  CLIENTE(DATA_CADASTRO, CPF_CNPJ, NOME, NASCIMENTO, PESSOA) VALUES ('01/02/2016','165.646.546-54','JOSE ','10/05/1999', 'PF');



--- EXERCICIO 2 - A

CREATE OR REPLACE FUNCTION EXE_2A() RETURNS TRIGGER AS $$

BEGIN
    CASE( NEW.IDUNIDADEMEDIDA ='') THEN (IDUNIDADEMEDIDA = 'UN')
                                  ELSE
                                   (IDUNIDADEMEDIDA = '')
                             END

RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_PRODUTO AFTER INSERT OR UPDATE ON PRODUTO
FOR EACH ROW EXECUTE PROCEDURE EXE_2A();
INSERT INTO PRODUTO(IDUNIDADEMEDIDA, DESCRICAO, PRECO) VALUES (004,'CELULAR',800.00);


-- EXERCICIO 3 - A

INSERT INTO CLIENTE (DATA_CADASTRO, CPF_CNPJ, NOME, NASCIMENTO, PESSOA) VALUES (CURRENT_DATE ,000,'CONSUMIDOR ','00/00/0000', 'NU');


-- EXERCICIO 3 - B

CREATE OR REPLACE FUNCTION EXE_3B() RETURNS TRIGGER AS $$

BEGIN
    NEW.DATA_VENDA := EXTRACT ('DATE' FROM AGE(CURRENT_DATE)); 

RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_VENDA AFTER INSERT OR UPDATE ON VENDA
FOR EACH ROW EXECUTE PROCEDURE EXE_3B();
INSERT INTO  VENDA(DATA_VENDA) VALUES ('10/05/2017');

-- EXERCICIO 3 - C 

CREATE OR REPLACE FUNCTION EXE_3C() RETURNS TRIGGER AS $$

BEGIN
      CASE( NEW.IDCLIENTE ='') THEN (IDCLIENTE = 'CONSUMIDOR')
                                  ELSE
                                   (IDUNIDADEMEDIDA = '')
                             END 

RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_VENDA AFTER INSERT OR UPDATE ON VENDA
FOR EACH ROW EXECUTE PROCEDURE EXE_3C();
INSERT INTO  VENDA(DATA_VENDA) VALUES ('11/11/2017');

-- EXERCICIO 4 - A
CREATE OR REPLACE FUNCTION EXE_4A() RETURNS TRIGGER AS $$
DECLARE 
VALOR_TOTAL := INTEGER;
BEGIN
   VALOR_TOTAL = QUANTIDADE * TOTAL;
    
RETURN NEW;
END;

$$ LANGUAGE PLPGSQL;
CREATE TRIGGER TAI_VENDA AFTER INSERT OR UPDATE ON VENDA
FOR EACH ROW EXECUTE PROCEDURE EXE_4A();
INSERT INTO  ITEM(QUANTIDADE, TOTAL,) VALUES (10, 450.00);
